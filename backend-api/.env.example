# ==============================================
# üèóÔ∏è Backend API Service - Environment Configuration
# ==============================================
# Copy this file to .env and fill in your actual values
# This service handles REST API, authentication, and database operations

# ==============================================
# üåç SERVICE SETTINGS
# ==============================================
NODE_ENV=development
# Options: development, production, test

# Server Configuration
PORT=3000
HOST=0.0.0.0
# Host to bind the server (0.0.0.0 for all interfaces)

# ==============================================
# üîê AUTHENTICATION & SECURITY
# ==============================================

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-min-32-chars-long
# Generate with: openssl rand -base64 32
JWT_EXPIRES_IN=7d
# Token expiration (7d, 24h, 60m, etc.)

# Stack Auth Integration
STACK_AUTH_PROJECT_ID=your-stack-auth-project-id
STACK_AUTH_PUBLISHABLE_KEY=your-stack-auth-publishable-key
STACK_AUTH_SECRET_KEY=your-stack-auth-secret-key
STACK_AUTH_API_URL=https://api.stack-auth.com
# Get credentials from: https://stack-auth.com/dashboard

# Password Security
BCRYPT_ROUNDS=10
# Higher = more secure but slower (10-12 recommended)

# Session Management
SESSION_SECRET=your-session-secret-key-min-32-chars
SESSION_COOKIE_MAX_AGE=604800000
# 7 days in milliseconds

# ==============================================
# üíæ DATABASE CONFIGURATION
# ==============================================

# PostgreSQL Connection
DATABASE_URL=postgresql://postgres:password@localhost:5432/whatsapp_saas
# Full connection string (Railway format)

# Individual DB Parameters (alternative to DATABASE_URL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=whatsapp_saas
DB_USER=postgres
DB_PASSWORD=your-postgres-password

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000
DB_POOL_CONNECTION_TIMEOUT=2000

# SSL Configuration
DB_SSL_MODE=disable
# Options: require, disable, prefer (use 'require' in production)

# ==============================================
# üöÄ REDIS CONFIGURATION
# ==============================================

# Redis Connection
REDIS_URL=redis://localhost:6379
# Full connection string (Railway format)

# Individual Redis Parameters (alternative to REDIS_URL)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
# Database number (0-15)

# Redis Connection Settings
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_RETRY_DELAY=50
REDIS_MAX_RETRIES=3

# ==============================================
# üê∞ RABBITMQ CONFIGURATION
# ==============================================

# RabbitMQ Connection
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# Full connection string (CloudAMQP format)

# Individual RabbitMQ Parameters (alternative to RABBITMQ_URL)
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
# Virtual host (default is /)

# Queue Names
SEND_MESSAGE_QUEUE=send_message
DLQ_SEND_MESSAGE_QUEUE=send_message_dlq
# Dead Letter Queue for failed messages

# Message Publishing Settings
MESSAGE_PUBLISH_TIMEOUT=10000
MESSAGE_PUBLISH_RETRIES=3

# ==============================================
# üåê HTTP & CORS CONFIGURATION
# ==============================================

# CORS Settings
CORS_ORIGIN=http://localhost:5173
# Frontend URL (comma-separated for multiple origins)
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Stack-Auth-Token

# Request Configuration
REQUEST_SIZE_LIMIT=10mb
# Maximum request body size
REQUEST_TIMEOUT=30000
# Request timeout in milliseconds

# ==============================================
# üéØ RATE LIMITING
# ==============================================

# API Rate Limiting
RATE_LIMIT_WINDOW=900000
# 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100
# Max requests per window per IP
RATE_LIMIT_SKIP_FAILED_REQUESTS=true
# Skip counting failed requests (4xx, 5xx)

# Authentication Rate Limiting
AUTH_RATE_LIMIT_WINDOW=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=10
# Stricter limits for auth endpoints

# ==============================================
# üìä LOGGING & MONITORING
# ==============================================

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug
LOG_FORMAT=combined
# Express log format (combined, common, dev)
LOG_FILE_PATH=./logs/backend-api.log

# Request Logging
LOG_REQUESTS=true
LOG_REQUEST_BODY=false
# Be careful with sensitive data

# Database Logging
LOG_DATABASE_QUERIES=false
# Enable for debugging (may impact performance)

# ==============================================
# üîß FEATURE FLAGS
# ==============================================

# API Features
ENABLE_SWAGGER_DOCS=true
# Enable API documentation at /docs
ENABLE_HEALTH_CHECK=true
# Enable health check endpoint at /health
ENABLE_METRICS=true
# Enable Prometheus metrics at /metrics

# Security Features
ENABLE_HELMET=true
# Enable security headers
ENABLE_CSRF_PROTECTION=false
# Enable CSRF protection
ENABLE_REQUEST_VALIDATION=true
# Enable request body validation

# ==============================================
# üì± EVOLUTION API INTEGRATION
# ==============================================

# Evolution API Configuration (for webhook handling)
EVOLUTION_API_BASE_URL=https://your-evolution-api.com
EVOLUTION_API_KEY=your-evolution-api-key

# Webhook Settings
EVOLUTION_WEBHOOK_SECRET=your-webhook-secret
# Secret for webhook verification

# ==============================================
# üìÅ FILE STORAGE
# ==============================================

# Cloudflare R2 Configuration
CLOUDFLARE_R2_ACCOUNT_ID=your-cloudflare-account-id
CLOUDFLARE_R2_ACCESS_KEY_ID=your-r2-access-key
CLOUDFLARE_R2_SECRET_ACCESS_KEY=your-r2-secret-key
CLOUDFLARE_R2_BUCKET_NAME=whatsapp-saas-media
CLOUDFLARE_R2_PUBLIC_URL=https://your-bucket.r2.dev

# File Upload Settings
MAX_FILE_SIZE=10485760
# 10MB in bytes
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,video/mp4,audio/mp3,application/pdf
UPLOAD_PATH=/tmp/uploads
# Temporary upload directory

# ==============================================
# üìß EMAIL CONFIGURATION
# ==============================================

# SMTP Settings (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM_NAME=WhatsApp SaaS Platform
SMTP_FROM_EMAIL=noreply@your-domain.com

# Email Features
ENABLE_EMAIL_NOTIFICATIONS=true
ENABLE_WELCOME_EMAIL=true
ENABLE_PASSWORD_RESET_EMAIL=true

# ==============================================
# üß™ DEVELOPMENT & TESTING
# ==============================================

# Development Features
DEBUG=true
DEVELOPMENT_SEED_DATA=false
# Automatically seed database with test data

# Hot Reloading
ENABLE_HOT_RELOAD=true
WATCH_FILES=true

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/whatsapp_saas_test
TEST_REDIS_URL=redis://localhost:6379/1
TEST_TIMEOUT=10000

# ==============================================
# üìà BUSINESS LOGIC
# ==============================================

# Message Quotas by Plan
FREE_PLAN_MONTHLY_MESSAGES=1000
BASIC_PLAN_MONTHLY_MESSAGES=10000
PRO_PLAN_MONTHLY_MESSAGES=100000
ENTERPRISE_PLAN_MONTHLY_MESSAGES=-1
# -1 = unlimited

# Campaign Settings
MAX_CAMPAIGNS_PER_COMPANY=50
MAX_CONTACTS_PER_CAMPAIGN=10000
CAMPAIGN_SCHEDULING_LIMIT_DAYS=30
# Maximum days in advance to schedule campaigns

# ==============================================
# üöÄ PRODUCTION CONFIGURATION
# ==============================================

# Production Database (Railway PostgreSQL)
# DATABASE_URL=postgresql://postgres:password@containers-us-west-xxx.railway.app:5432/railway

# Production Redis (Railway Redis)
# REDIS_URL=redis://default:password@containers-us-west-xxx.railway.app:6379

# Production RabbitMQ (CloudAMQP)
# RABBITMQ_URL=amqps://username:password@fox.rmq.cloudamqp.com/vhost

# SSL/TLS Configuration
SSL_ENABLED=false
# Enable for HTTPS in production
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# Domain Configuration
API_DOMAIN=localhost:3000
# Production: api.your-domain.com

# ==============================================
# üîç TROUBLESHOOTING
# ==============================================

# Debug Settings
DEBUG_SQL=false
# Log all SQL queries
DEBUG_REDIS=false
# Log Redis operations
DEBUG_RABBITMQ=false
# Log RabbitMQ operations

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=false
PERFORMANCE_SAMPLE_RATE=0.1
# Percentage of requests to monitor

# ==============================================
# üìã SETUP INSTRUCTIONS
# ==============================================
#
# 1. Copy this file to .env in the backend-api directory
# 2. Fill in your actual values (replace 'your-*' placeholders)
# 3. Ensure PostgreSQL, Redis, and RabbitMQ are running
# 4. Create the database: createdb whatsapp_saas
# 5. Run migrations: npm run db:migrate
# 6. Start the server: npm run dev
#
# Required Services:
# - PostgreSQL 13+ (local or Railway)
# - Redis 6+ (local or Railway)
# - RabbitMQ 3.8+ (local or CloudAMQP)
# - Stack Auth account
# - Evolution API instance
# - Cloudflare R2 bucket (optional)
#
# For production deployment on Railway:
# 1. Create Railway project
# 2. Add PostgreSQL and Redis plugins
# 3. Set environment variables in Railway dashboard
# 4. Deploy from GitHub repository
#