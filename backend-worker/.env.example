# ==============================================
# üîß Backend Worker Service - Environment Configuration
# ==============================================
# Copy this file to .env and fill in your actual values
# This service processes message queues and integrates with Evolution API

# ==============================================
# üåç SERVICE SETTINGS
# ==============================================
NODE_ENV=development
# Options: development, production, test

# Worker Configuration
WORKER_NAME=message-processor
WORKER_ID=worker-1
# Unique identifier for this worker instance

# ==============================================
# üíæ DATABASE CONFIGURATION
# ==============================================

# PostgreSQL Connection (for logging message status)
DATABASE_URL=postgresql://postgres:password@localhost:5432/whatsapp_saas
# Full connection string (Railway format)

# Individual DB Parameters (alternative to DATABASE_URL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=whatsapp_saas
DB_USER=postgres
DB_PASSWORD=your-postgres-password

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT=30000
DB_POOL_CONNECTION_TIMEOUT=2000

# SSL Configuration
DB_SSL_MODE=disable
# Options: require, disable, prefer (use 'require' in production)

# ==============================================
# üöÄ REDIS CONFIGURATION
# ==============================================

# Redis Connection (for caching and worker coordination)
REDIS_URL=redis://localhost:6379
# Full connection string (Railway format)

# Individual Redis Parameters (alternative to REDIS_URL)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
# Database number (0-15)

# Redis Connection Settings
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_RETRY_DELAY=50
REDIS_MAX_RETRIES=3

# ==============================================
# üê∞ RABBITMQ CONFIGURATION
# ==============================================

# RabbitMQ Connection
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# Full connection string (CloudAMQP format)

# Individual RabbitMQ Parameters (alternative to RABBITMQ_URL)
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
# Virtual host (default is /)

# Queue Configuration
SEND_MESSAGE_QUEUE=send_message
DLQ_SEND_MESSAGE_QUEUE=send_message_dlq
# Dead Letter Queue for failed messages

# Consumer Settings
QUEUE_PREFETCH_COUNT=5
# Number of messages to prefetch
QUEUE_CONSUMER_TAG=worker-consumer-1
# Unique consumer identifier

# ==============================================
# üì± EVOLUTION API CONFIGURATION
# ==============================================

# Evolution API Connection
EVOLUTION_API_BASE_URL=https://your-evolution-api.com
# Your Evolution API instance URL
EVOLUTION_API_KEY=your-evolution-api-key
# Global API key for authentication

# WhatsApp Instance Management
EVOLUTION_DEFAULT_INSTANCE=default-instance
EVOLUTION_AUTO_CREATE_INSTANCE=true
# Automatically create instances if they don't exist

# Message Sending Configuration
EVOLUTION_MESSAGE_TIMEOUT=30000
# Timeout for individual message sending
EVOLUTION_RETRY_ATTEMPTS=3
EVOLUTION_RETRY_DELAY=2000
# Delay between retry attempts in milliseconds

# Media Message Settings
EVOLUTION_MEDIA_TIMEOUT=60000
# Extended timeout for media messages
EVOLUTION_MEDIA_MAX_SIZE=10485760
# 10MB max media file size

# ==============================================
# üîß WORKER PROCESSING SETTINGS
# ==============================================

# Message Processing
WORKER_CONCURRENCY=5
# Number of messages to process concurrently
WORKER_BATCH_SIZE=10
# Number of messages to process in each batch
WORKER_PROCESSING_TIMEOUT=30000
# Timeout for processing each message

# Retry Configuration
WORKER_MAX_RETRIES=3
# Maximum retry attempts for failed messages
WORKER_RETRY_DELAY=5000
# Base delay between retries (exponential backoff)
WORKER_RETRY_MULTIPLIER=2
# Exponential backoff multiplier

# Error Handling
WORKER_DLQ_ENABLED=true
# Enable dead letter queue for failed messages
WORKER_ERROR_THRESHOLD=10
# Number of consecutive errors before pausing

# Performance Settings
WORKER_MEMORY_LIMIT=512
# Memory limit in MB
WORKER_CPU_LIMIT=80
# CPU usage limit percentage

# ==============================================
# üìä LOGGING & MONITORING
# ==============================================

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug
LOG_FORMAT=json
# Log format (json, text)
LOG_FILE_PATH=./logs/backend-worker.log

# Message Logging
LOG_MESSAGE_CONTENT=false
# Log full message content (be careful with privacy)
LOG_PROCESSING_TIME=true
# Log processing time for each message
LOG_QUEUE_METRICS=true
# Log queue size and processing metrics

# Monitoring
ENABLE_METRICS=true
METRICS_PORT=9091
# Prometheus metrics endpoint
METRICS_INTERVAL=30000
# Metrics collection interval

# ==============================================
# üîß FEATURE FLAGS
# ==============================================

# Worker Features
ENABLE_HEALTH_CHECK=true
# Enable health check endpoint
ENABLE_GRACEFUL_SHUTDOWN=true
# Enable graceful shutdown handling
ENABLE_MESSAGE_DEDUPLICATION=true
# Prevent duplicate message processing

# Processing Features
ENABLE_MESSAGE_VALIDATION=true
# Validate message format before processing
ENABLE_RATE_LIMITING=true
# Enable rate limiting for Evolution API calls
ENABLE_CIRCUIT_BREAKER=true
# Enable circuit breaker for Evolution API

# ==============================================
# üéØ RATE LIMITING & THROTTLING
# ==============================================

# Evolution API Rate Limiting
EVOLUTION_RATE_LIMIT_ENABLED=true
EVOLUTION_RATE_LIMIT_REQUESTS=100
# Requests per minute
EVOLUTION_RATE_LIMIT_WINDOW=60000
# Rate limit window in milliseconds

# Message Processing Throttling
MESSAGE_PROCESSING_DELAY=100
# Delay between processing messages (milliseconds)
BATCH_PROCESSING_DELAY=1000
# Delay between processing batches

# ==============================================
# üö® ERROR HANDLING & RECOVERY
# ==============================================

# Circuit Breaker Settings
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_THRESHOLD=5
# Number of failures before opening circuit
CIRCUIT_BREAKER_TIMEOUT=60000
# Timeout before attempting to close circuit
CIRCUIT_BREAKER_RESET_TIMEOUT=30000
# Reset timeout after successful calls

# Recovery Settings
AUTO_RECOVERY_ENABLED=true
RECOVERY_CHECK_INTERVAL=30000
# Check for recovery every 30 seconds
MAX_RECOVERY_ATTEMPTS=3
# Maximum auto-recovery attempts

# ==============================================
# üß™ DEVELOPMENT & TESTING
# ==============================================

# Development Features
DEBUG=true
DEVELOPMENT_MODE=true
# Enable development-specific features

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/whatsapp_saas_test
TEST_REDIS_URL=redis://localhost:6379/1
TEST_RABBITMQ_URL=amqp://guest:guest@localhost:5672/test
TEST_TIMEOUT=10000

# Mock Services (for testing)
MOCK_EVOLUTION_API=false
# Use mock Evolution API for testing
MOCK_MESSAGE_DELAY=1000
# Simulated message processing delay

# ==============================================
# üöÄ PRODUCTION CONFIGURATION
# ==============================================

# Production Database (Railway PostgreSQL)
# DATABASE_URL=postgresql://postgres:password@containers-us-west-xxx.railway.app:5432/railway

# Production Redis (Railway Redis)
# REDIS_URL=redis://default:password@containers-us-west-xxx.railway.app:6379

# Production RabbitMQ (CloudAMQP)
# RABBITMQ_URL=amqps://username:password@fox.rmq.cloudamqp.com/vhost

# Production Evolution API
# EVOLUTION_API_BASE_URL=https://your-production-evolution-api.com
# EVOLUTION_API_KEY=your-production-evolution-api-key

# Production Settings
PRODUCTION_WORKER_CONCURRENCY=10
# Higher concurrency for production
PRODUCTION_BATCH_SIZE=20
# Larger batch size for production
PRODUCTION_MEMORY_LIMIT=1024
# 1GB memory limit for production

# ==============================================
# üîç TROUBLESHOOTING
# ==============================================

# Debug Settings
DEBUG_EVOLUTION_API=false
# Log Evolution API requests/responses
DEBUG_QUEUE_OPERATIONS=false
# Log queue operations in detail
DEBUG_MESSAGE_PROCESSING=false
# Log detailed message processing steps

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=false
PERFORMANCE_SAMPLE_RATE=0.1
# Percentage of operations to monitor

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PORT=3001
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_INTERVAL=30000
# Health check interval in milliseconds

# ==============================================
# üìã SETUP INSTRUCTIONS
# ==============================================
#
# 1. Copy this file to .env in the backend-worker directory
# 2. Fill in your actual values (replace 'your-*' placeholders)
# 3. Ensure PostgreSQL, Redis, and RabbitMQ are running
# 4. Ensure Evolution API instance is configured and accessible
# 5. Start the worker: npm run dev
#
# Required Services:
# - PostgreSQL 13+ (for message logging)
# - Redis 6+ (for caching and coordination)
# - RabbitMQ 3.8+ (for message queues)
# - Evolution API instance (for WhatsApp integration)
#
# Message Flow:
# 1. Backend API publishes messages to 'send_message' queue
# 2. Worker consumes messages from queue
# 3. Worker processes messages via Evolution API
# 4. Worker logs results to PostgreSQL database
# 5. Failed messages go to dead letter queue for retry
#
# For production deployment on Railway:
# 1. Create Railway project for worker service
# 2. Set environment variables in Railway dashboard
# 3. Deploy from GitHub repository
# 4. Monitor logs and metrics
#