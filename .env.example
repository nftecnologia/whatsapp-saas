# ==============================================
# üèóÔ∏è WhatsApp SaaS Platform - Main Configuration
# ==============================================
# This is the main environment configuration file for the WhatsApp SaaS platform
# Copy this file to .env and fill in your actual values
# Documentation: https://github.com/your-repo/whatsapp-saas-platform

# ==============================================
# üåç ENVIRONMENT SETTINGS
# ==============================================
NODE_ENV=development
# Options: development, production, test
# Affects logging, error handling, SSL requirements, etc.

# ==============================================
# üîê SECURITY & AUTHENTICATION
# ==============================================

# JWT Token Configuration
JWT_SECRET=your-super-secret-jwt-key-min-32-chars-long
# Generate a secure random string: openssl rand -base64 32
JWT_EXPIRES_IN=7d
# Token expiration time (7d = 7 days, 24h = 24 hours)

# Stack Auth Configuration
STACK_AUTH_PROJECT_ID=your-stack-auth-project-id
STACK_AUTH_PUBLISHABLE_KEY=your-stack-auth-publishable-key
STACK_AUTH_SECRET_KEY=your-stack-auth-secret-key
STACK_AUTH_API_URL=https://api.stack-auth.com
# Get these from https://stack-auth.com/dashboard

# Session & Security
SESSION_SECRET=your-session-secret-key-min-32-chars
BCRYPT_ROUNDS=10
# Higher values = more secure but slower (10-12 recommended)

# ==============================================
# üíæ DATABASE CONFIGURATION
# ==============================================

# PostgreSQL Database
DATABASE_URL=postgresql://username:password@localhost:5432/whatsapp_saas
# Full connection string (used for production, Railway, etc.)

# OR individual database parameters (for development)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=whatsapp_saas
DB_USER=postgres
DB_PASSWORD=your-postgres-password
# SSL mode for production (require, disable, prefer)
DB_SSL_MODE=disable

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000
DB_POOL_CONNECTION_TIMEOUT=2000

# ==============================================
# üöÄ REDIS CONFIGURATION
# ==============================================

# Redis Cache & Rate Limiting
REDIS_URL=redis://localhost:6379
# Full connection string (used for production, Railway, etc.)

# OR individual Redis parameters (for development)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
# Database number (0-15)

# Redis Connection Settings
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_RETRY_DELAY=50
REDIS_MAX_RETRIES=3

# ==============================================
# üê∞ RABBITMQ CONFIGURATION
# ==============================================

# RabbitMQ Message Queue
RABBITMQ_URL=amqp://guest:guest@localhost:5672/
# Full connection string (CloudAMQP, local, etc.)

# OR individual RabbitMQ parameters
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
# Virtual host (default is /)

# Queue Configuration
SEND_MESSAGE_QUEUE=send_message
DLQ_SEND_MESSAGE_QUEUE=send_message_dlq
# Dead Letter Queue for failed messages

# Message Processing Settings
MESSAGE_RETRY_ATTEMPTS=3
MESSAGE_RETRY_DELAY=5000
# Delay between retries in milliseconds
MESSAGE_PROCESSING_CONCURRENCY=5
# Number of messages processed concurrently

# ==============================================
# üì± EVOLUTION API CONFIGURATION
# ==============================================

# Evolution API for WhatsApp Integration
EVOLUTION_API_BASE_URL=https://your-evolution-api.com
# Your Evolution API instance URL
EVOLUTION_API_KEY=your-evolution-api-key
# API key for authentication

# WhatsApp Instance Settings
EVOLUTION_DEFAULT_INSTANCE=default-instance
EVOLUTION_WEBHOOK_URL=https://your-domain.com/webhooks/evolution
# Webhook URL for receiving WhatsApp events

# Message Settings
EVOLUTION_MESSAGE_TIMEOUT=30000
# Timeout for message sending in milliseconds
EVOLUTION_RETRY_ATTEMPTS=3
EVOLUTION_RETRY_DELAY=2000

# ==============================================
# üåê SERVER CONFIGURATION
# ==============================================

# Backend API Server
API_PORT=3000
API_HOST=0.0.0.0
API_BASE_URL=http://localhost:3000

# CORS Configuration
CORS_ORIGIN=http://localhost:5173
# Frontend URL (multiple origins: origin1,origin2,origin3)
CORS_CREDENTIALS=true

# Request Limits
API_RATE_LIMIT_WINDOW=15
# Rate limit window in minutes
API_RATE_LIMIT_MAX=100
# Max requests per window per IP
API_REQUEST_SIZE_LIMIT=10mb
# Maximum request body size

# ==============================================
# üé® FRONTEND CONFIGURATION
# ==============================================

# Frontend Application
FRONTEND_PORT=5173
FRONTEND_BASE_URL=http://localhost:5173

# API Configuration for Frontend
VITE_API_BASE_URL=http://localhost:3000/api
VITE_WS_BASE_URL=ws://localhost:3000
# WebSocket URL for real-time features

# Stack Auth Frontend
VITE_STACK_AUTH_PUBLISHABLE_KEY=your-stack-auth-publishable-key
VITE_APP_URL=http://localhost:5173

# ==============================================
# üìÅ FILE STORAGE CONFIGURATION
# ==============================================

# Cloudflare R2 Storage
CLOUDFLARE_R2_ACCOUNT_ID=your-cloudflare-account-id
CLOUDFLARE_R2_ACCESS_KEY_ID=your-r2-access-key
CLOUDFLARE_R2_SECRET_ACCESS_KEY=your-r2-secret-key
CLOUDFLARE_R2_BUCKET_NAME=whatsapp-saas-media
CLOUDFLARE_R2_PUBLIC_URL=https://your-bucket.r2.dev
# Public URL for accessing uploaded files

# File Upload Settings
MAX_FILE_SIZE=10485760
# Maximum file size in bytes (10MB = 10485760)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,video/mp4,audio/mp3,application/pdf
UPLOAD_PATH=/tmp/uploads
# Temporary upload directory

# ==============================================
# üìß EMAIL CONFIGURATION (Optional)
# ==============================================

# SMTP Settings for notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM_NAME=WhatsApp SaaS Platform
SMTP_FROM_EMAIL=noreply@your-domain.com

# ==============================================
# üìä MONITORING & LOGGING
# ==============================================

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug
LOG_FORMAT=combined
# Access log format (combined, common, dev)
LOG_FILE_PATH=./logs/app.log
# Log file location

# Application Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090
# Prometheus metrics endpoint

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# ==============================================
# üöÄ DEPLOYMENT CONFIGURATION
# ==============================================

# Railway Deployment
RAILWAY_ENVIRONMENT=production
RAILWAY_PROJECT_ID=your-railway-project-id
RAILWAY_SERVICE_ID=your-railway-service-id

# Domain Configuration
DOMAIN=your-domain.com
API_DOMAIN=api.your-domain.com
FRONTEND_DOMAIN=app.your-domain.com

# SSL/TLS
SSL_ENABLED=true
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# ==============================================
# üîß WORKER SERVICE CONFIGURATION
# ==============================================

# Worker Process Settings
WORKER_CONCURRENCY=5
# Number of concurrent message processors
WORKER_RETRY_ATTEMPTS=3
WORKER_RETRY_DELAY=5000
# Delay between retries in milliseconds

# Message Processing
WORKER_BATCH_SIZE=10
# Number of messages to process in batch
WORKER_PROCESSING_TIMEOUT=30000
# Timeout for processing each message

# ==============================================
# üß™ DEVELOPMENT & TESTING
# ==============================================

# Development Settings
DEBUG=true
DEVELOPMENT_SEED_DATA=false
# Automatically seed database with test data

# Testing Configuration
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/whatsapp_saas_test
TEST_REDIS_URL=redis://localhost:6379/1
# Use different Redis database for tests

# API Testing
TEST_API_BASE_URL=http://localhost:3001
TEST_TIMEOUT=10000

# ==============================================
# üìà ANALYTICS & FEATURES
# ==============================================

# Feature Flags
ENABLE_ANALYTICS=true
ENABLE_REAL_TIME_UPDATES=true
ENABLE_WEBHOOK_VERIFICATION=true
ENABLE_MESSAGE_ENCRYPTION=false

# Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX
MIXPANEL_TOKEN=your-mixpanel-token

# ==============================================
# üéØ RATE LIMITING & QUOTAS
# ==============================================

# API Rate Limiting
RATE_LIMIT_WINDOW=900000
# 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_FAILED_REQUESTS=true

# Message Quotas by Plan
FREE_PLAN_MONTHLY_MESSAGES=1000
BASIC_PLAN_MONTHLY_MESSAGES=10000
PRO_PLAN_MONTHLY_MESSAGES=100000
ENTERPRISE_PLAN_MONTHLY_MESSAGES=-1
# -1 = unlimited

# ==============================================
# üîó EXTERNAL SERVICES & INTEGRATIONS
# ==============================================

# Webhook Configuration
WEBHOOK_SECRET=your-webhook-secret-key
WEBHOOK_TIMEOUT=10000
# Timeout for webhook requests

# Third-party Integrations
ZAPIER_WEBHOOK_URL=https://hooks.zapier.com/hooks/catch/your-webhook
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your-webhook
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your-webhook

# ==============================================
# üìã ADDITIONAL NOTES
# ==============================================
# 
# 1. Security Best Practices:
#    - Use strong, unique passwords for all services
#    - Rotate secrets regularly in production
#    - Enable SSL/TLS in production
#    - Use environment-specific configurations
#
# 2. Development Setup:
#    - Copy this file to .env
#    - Fill in your local development values
#    - Never commit .env files to version control
#    - Use different values for each environment
#
# 3. Production Deployment:
#    - Use Railway, Vercel, or similar platform variables
#    - Enable all security features
#    - Monitor logs and metrics
#    - Set up backup strategies
#
# 4. Service Dependencies:
#    - PostgreSQL database must be created before first run
#    - Redis server must be running
#    - RabbitMQ server must be accessible
#    - Evolution API instance must be configured
#
# 5. Required Services:
#    - PostgreSQL 13+ (database)
#    - Redis 6+ (caching, sessions)
#    - RabbitMQ 3.8+ (message queue)
#    - Evolution API (WhatsApp integration)
#    - Stack Auth (authentication)
#    - Cloudflare R2 (file storage)
#
# For more information, see: README.md and docs/